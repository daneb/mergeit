#!/usr/bin/env ruby

require "bundler/setup"
require "slop"
require "mergeit"

# Command Line Executable 
class MergeCommandLine
  attr_reader :banner, :opts

  # Main entry point  
  def process_command_line
    parse_options 
    setup_globals
    return [nil, nil] unless valid_input?
    [ @file1, @file2 ]
  rescue Exception => e
      puts e.message
  end

  # Used to parse user input on command line
  def parse_options
     @opts = Slop.parse do |o| 
      o.string '-f1', '--file1', 'First source file'
      o.string '-f2', '--file2', 'Second source file'
      o.on '-v', '--version' do
        puts Slop::VERSION
      end
    end
  rescue Exception => e
    raise
  end

  # Setup the requirements for merging
  def setup_globals
    @banner = @opts.to_s
    result = @opts.to_hash
    @file1 = result[:file1]
    @file2 = result[:file2]
  end

  # Print a console banner with custom error if needed
  def print_banner(meta_info = nil)
    banner = meta_info.nil? ? "#{@banner}" : "#{meta_info}\n #{@banner}"
    puts banner
  end

  def run_without_input?
    if no_filenames_specified?
      print_banner
      return true
    end
    false
  end

  def run_with_one_filename_only?
    if one_of_files_invalid?
      print_banner('both filenames are required')
      return true
    end
    false
  end

  def valid_input?
    return false if run_without_input? or run_with_one_filename_only? 
    true
  rescue Slop::UnknownOption => e
    puts "Unknown option \n #{@banner}"
  end

  def one_of_files_invalid?
    invalid_filename?(@file1) or @file1 == '-f2' or invalid_filename?(@file2)
  end

  def no_filenames_specified?
    invalid_filename?(@file1) and invalid_filename?(@file2)
  end

  def invalid_filename?(parameter)
    parameter.nil? or parameter.empty?
  end
end

# Main
begin
  console = MergeCommandLine.new
  file1, file2 = console.process_command_line
  exit if file1.nil? or file2.nil?
  utility = Mergeit::Merge.new([file1, file2])
  puts utility.merge
rescue Mergeit::Merge::MergeError => e
  puts "Errors from merge: #{e.message}"
  exit
end
